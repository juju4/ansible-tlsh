---

- name: git clone TrendMicro TLSH
  git:
    repo=https://github.com/trendmicro/tlsh.git
    dest={{ toolsetdir }}/tlsh
    version={{ tlsh_version }}
    update={{ tlsh_git_update | default('no') }}
    force=no

- name: Check if tlsh binary exists
  stat: path=/usr/local/bin/tlsh
  register: tlsh

- name: TLSH dependencies
  package: name={{ tlsh_build_deps }} state=present
  register: pkg_result
  until: pkg_result is success

# Change to CMakeLists.txt ?
- name: Ensure Shared library setting as defined
  replace:
    dest: "{{ toolsetdir }}/tlsh/src/CMakeLists.txt"
    regexp: '^set\(TLSH_SHARED_LIBRARY .*\)'
    replace: "set(TLSH_SHARED_LIBRARY {% if tlsh_shared_lib %}1{% else %}0{% endif %})"
    backup: yes

- name: TLSH build
  command: "./make.sh"
  args:
    chdir: "{{ toolsetdir }}/tlsh"
    creates: "{{ toolsetdir }}/tlsh/lib/libtlsh.a"
  register: build
#  failed_when: "' Error ' in build.stderr"

- block:
    - name: TLSH Python bindings
      command: "{{ item }}"
      args:
        chdir: "{{ toolsetdir }}/tlsh/py_ext"
        creates: "{{ tlsh_python_bindings }}"
      with_items:
        - "{{ tlsh_python_bin }} setup.py build"
        - "{{ tlsh_python_bin }} setup.py install"
  when: tlsh_virtualenv_path is not defined or not tlsh_virtualenv_path

- block:
    - name: virtualenv dependencies
      package: name={{ item }} state=present
      with_items:
        - python-virtualenv
        - python-pip
    - name: ensure virtualenv user {{ tlsh_virtualenv_user }} exists
      user: "name={{ tlsh_virtualenv_user }} home={{ tlsh_virtualenv_home }} state=present"
    - name: check if binding exists
      stat: path="{{ tlsh_python_bindings }}"
      register: tlshso
    - name: temporary change permissions for virtualenv user
      file: dest={{ toolsetdir }}/tlsh/py_ext state=directory owner={{ tlsh_virtualenv_user }} recurse=yes
      when: not tlshso.stat.exists
    - name: build TLSH Python bindings - virtualenv
      command: "{{ item.c }} chdir={{ item.d }} creates={{ item.t }}"
      with_items:
        - { c: "virtualenv -p {{ tlsh_python_bin }} {{ tlsh_virtualenv_path }}",
            d: "{{ tlsh_virtualenv_home }}",
            t: "{{ tlsh_virtualenv_path }}"
          }
        - { c: "{{ tlsh_virtualenv_path }}/bin/{{ tlsh_python_bin }} setup.py install",
            d: "{{ toolsetdir }}/tlsh/py_ext",
            t: "{{ tlsh_python_bindings | regex_replace('/usr', tlsh_virtualenv_path) }}"
          }
      become: yes
      become_user: "{{ tlsh_virtualenv_user }}"
    - name: restore permissions
      file: dest={{ toolsetdir }}/tlsh/py_ext state=directory owner=root recurse=yes
      when: not tlshso.stat.exists
  when: tlsh_virtualenv_path is defined and tlsh_virtualenv_path
