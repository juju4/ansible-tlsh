---

- name: git clone TrendMicro TLSH
  git:
    repo=https://github.com/trendmicro/tlsh.git
    dest={{ toolsetdir }}/tlsh
    version={{ tlsh_version }}
    force=yes

- stat: path=/usr/local/bin/tlsh
  register: tlsh

- name: TLSH dependencies
  package: name={{item}} state=present
  with_items: "{{ tlsh_build_deps }}"

# Change to CMakeLists.txt ?

- name: TLSH build
  command: "{{ item }} chdir={{ toolsetdir }}/tlsh creates={{ toolsetdir }}/tlsh/lib/libtlsh.so"
  with_items:
    - ./make.sh

- block:
    - name: TLSH Python bindings
      command: "{{ item }} chdir={{ toolsetdir }}/tlsh/py_ext creates={{ tlsh_python_bindings }}"
      with_items:
        - python setup.py build
        - python setup.py install
  when: tlsh_virtualenv_path is not defined or tlsh_virtualenv_path == ''

- block:
    - name: virtualenv dependencies
      package: name={{ item }} state=present
      with_items:
        - python-virtualenv
        - python-pip
    - name: ensure virtualenv user {{ tlsh_virtualenv_user }} exists
      user: "name={{ tlsh_virtualenv_user }} home={{ tlsh_virtualenv_home }} state=present"
    - name: check if binding exists
      stat: path="{{ tlsh_virtualenv_path }}/lib/python2.7/site-packages/tlsh.so"
      register: tlshso
    - name: temporary change permissions for virtualenv user
      file: dest={{ toolsetdir }}/tlsh/py_ext state=directory owner={{ tlsh_virtualenv_user }} recurse=yes
      when: not tlshso.stat.exists
    - name: build TLSH Python bindings - virtualenv
      command: "{{ item.c }} chdir={{ item.d }} creates={{ item.t }}"
      with_items:
        - { c: "virtualenv {{ tlsh_virtualenv_path }}", d: "{{ tlsh_virtualenv_home }}", t: "{{ tlsh_virtualenv_path }}" }
        - { c: "{{ tlsh_virtualenv_path }}/bin/python setup.py install", d: "{{ toolsetdir }}/tlsh/py_ext", t: "{{ tlsh_virtualenv_path }}/lib/python2.7/site-packages/tlsh.so" }
      become: yes
      become_user: "{{ tlsh_virtualenv_user }}"
    - name: restore permissions
      file: dest={{ toolsetdir }}/tlsh/py_ext state=directory owner=root recurse=yes
      when: not tlshso.stat.exists
  when: tlsh_virtualenv_path is defined and tlsh_virtualenv_path != ''


